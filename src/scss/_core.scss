/* RESET */
html{overflow-x: hidden; font-size: body(font-size); }
body {background: body(background);color:body(font-color);
  @if variable-exists(font-family){font-family:$font-family; }
}
a{color: link(font-color); text-decoration: underline;
  &:hover{color: link(font-color-hover); text-decoration: none;};
  &:focus{color: link(font-color-focus); outline: none;};
  &.disabled,&[disabled]{@extend .no-events; text-decoration: line-through;}
}
ul,ol,
p{margin-bottom: $spacing;}

table{table-layout: fixed;}
iframe{max-width:100%;}
img{max-width: 100%; height: auto;
  .zoomin &, &.zoomin,
  .zoomout &, &.zoomout,
  .fadetogrey &, &.fadetogrey,
  .fadetocolor &, &.fadetocolor
  {transition: all 0.6s; outline: 1px solid transparent;}

  .zoomin &,
  &.zoomin{transform: scale3d(1,1,1);}
  .zoomin:hover &,
  &.zoomin:hover{transform: scale3d(1.2,1.2,1.2);}

  .zoomout &,
  &.zoomout{transform: scale3d(1.2,1.2,1.2);}
  .zoomout:hover &,
  &.zoomout:hover{transform: scale3d(1,1,1);}

  .fadetocolor &,
  &.fadetocolor{filter: grayscale(100%);}
  .fadetocolor:hover &,
  &.fadetocolor:hover{filter: grayscale(0%);}

  .fadetogrey &,
  &.fadetogrey {filter: grayscale(0%);}
  .fadetogrey:hover &,
  &.fadetogrey:hover {filter: grayscale(100%);}
}

pre{background: color(blacklight); color: color(white); padding: $spacing/2; border-radius: $radius; font-size: 0.8em; margin-bottom: $spacing;}
pre code{display: block; position: static;}
pre .copy{position: absolute; right: $spacing; @extend .btn-sm;}

/*-----------------------------------------------------------------------------------------------------------------------------*/
/* OVERALL CLASSES */
.no-events{pointer-events: none;}
.no-transition{transition: none !important;}
.no-overflow{overflow:hidden;}

.hidden,
.invisible{display: none;}

.ellipsis{@include ellipsis();}

.center{margin: auto; width: fit-content;}
.center-block{margin: auto; display: block;}

.fl-left, .float-left{float: left;}
.fl-right, .float-right{float: right;}

.clear{clear:both;}
.clear-left{clear: left;}
.clear-right{clear: right;}
.clear-after{&:after{content: ""; display: block; width: 100%; height: 0px; clear: both;}}
.clear-before:before{content: ""; display: block; width: 100%; height: 0px; clear: both;}
.clear-no{clear:none;}

.text-right, .txt-right{text-align: right;}
.text-left, .txt-left{text-align: left;}
.text-center, .txt-center{text-align: center;}

/*-----------------------------------------------------------------------------------------------------------------------------*/
/* EFFECTS & INHERITANCE PLACEHOLDER */
%paper { position: relative; box-shadow: 0 1px 4px rgba(0, 0, 0, 0.27), 0 0 40px rgba(0, 0, 0, 0.06) inset; }
%paper %paper {box-shadow: 0px 2px 4px 1px rgba(0, 0, 0, 0.27), 0 0 40px rgba(0, 0, 0, 0.06) inset; }
%paper%lift:before,
%paper%lift:after {
  position: absolute;
  width: 40%;
  max-width: 230px;
  height: 10px;
  content: "";
  left: 12px;
  bottom: 10px;
  background: transparent;
  z-index: -1;
  transition: all 0.3s ease-in-out;
  transform: skew(-5deg) rotate(-5deg);
  box-shadow: 0 5px 14px rgba(0, 0, 0, 0.5);
}
%paper%lift:after {left: auto; right: 12px; transform: skew(5deg) rotate(5deg);}
%paper%lift:hover::before,
%paper%lift:hover::after {box-shadow: 0 2px 14px rgba(0,0,0,0.4);}
%paper%lift:hover::before {left: 5px;}
%paper%lift:hover::after {right: 5px;}

%ripple {
  position: relative; overflow: hidden;
  &:after {content: ""; display: block; position: absolute; width: 100%; height: 100%; top: 0; left: 0; pointer-events: none; background-image: radial-gradient(circle, #000 10%, transparent 10.01%); background-repeat: no-repeat; background-position: 50%; transform: scale(10,10); opacity: 0; transition: transform .5s, opacity 1s; }
  &:active:after {transform: scale(0,0); opacity: .2; transition: 0s; }
}


/*-----------------------------------------------------------------------------------------------------------------------------*/
// FONTS CLASSES
.ft-light{font-weight: 300;}
.ft-normal{font-weight: 400;}
.ft-bold{font-weight: 600;}
.ft-bolder{font-weight: 800;}

.ft-i{font-style: italic;}
.ft-b{font-weight: bold;}
.ft-u{text-decoration: underline;}
.ft-u-no{text-decoration: none;}

.ft-upper{text-transform: uppercase;}
.ft-lower{text-transform: lowercase;}

@for $index from 0 through 10 {
  @if $index != 0 {
    .ft-minus-#{$index}#{0}{font-size: #{1 - ($index * 0.10)}em;}
    .ft-plus-#{$index}#{0}{font-size: #{1 + ($index * 0.10)}em;}
  }
  .ft-#{$index}-em{font-size: #{$index}em;}
  .ft-#{$index}-rem{font-size: #{$index}rem;}
  @for $index2 from 1 through 9 {
    .ft-#{$index}-#{$index2}-em{font-size: unquote("#{$index}.#{$index2}em");}
    .ft-#{$index}-#{$index2}-rem{font-size: unquote("#{$index}.#{$index2}rem");}
  }
}

@each $key, $value in $colors{
  .ft-#{$key},
  .ft-#{$key}[class*="btn"],
  .ft-#{$key}[class*="btn"]:not([class*="btn-bg"]):not([class*="btn-bd"]),
  button.ft-#{$key}:not([class*="btn-bg"]):not([class*="btn-bd"]),
  input[type=button].ft-#{$key}:not([class*=btn-bg]):not([class*=btn-bd]),
  input[type=submit].ft-#{$key}:not([class*=btn-bg]):not([class*=btn-bd]),
  .ft-#{$key}[class*="bg-"]{color: $value;}
}


/*-----------------------------------------------------------------------------------------------------------------------------*/
// RADIUS
.rad,.rad-all{border-radius: $radius}
.rad-top-left{border-top-left-radius: $radius; }
.rad-top-right{border-top-right-radius: $radius; }
.rad-bottom-left{border-bottom-left-radius: $radius; }
.rad-bottom-right{border-bottom-right-radius: $radius; }

.rad-top{@extend .rad-top-left,.rad-top-right;}
.rad-bottom{@extend .rad-bottom-left,.rad-bottom-right;}

.rad-left{@extend .rad-top-left,.rad-bottom-left;}
.rad-right{@extend .rad-top-right,.rad-bottom-right;}


/*-----------------------------------------------------------------------------------------------------------------------------*/
// MARGINS - PADDINGS
@each $side in $sides {
  @if $side != 'all' {
    .m-#{$side}{margin-#{$side}: $spacing;}
    .m-#{$side}-0{margin-#{$side}: 0;}
    .m-#{$side}-x2{margin-#{$side}: $spacing * 2;}

    .p-#{$side}{padding-#{$side}: $spacing;}
    .p-#{$side}-0{padding-#{$side}: 0;}
    .p-#{$side}-x2{padding-#{$side}: $spacing * 2;}
  }
  @else {
    .m-#{$side}{margin: $spacing;}
    .m-#{$side}-0{margin: 0;}
    .m-#{$side}-x2{margin: $spacing * 2;}

    .p-#{$side}{padding: $spacing;}
    .p-#{$side}-0{padding: 0;}
    .p-#{$side}-x2{padding: $spacing * 2;}
  }
}
.m-x{@extend .m-right,.m-left !optional;}
.m-x-0{@extend .m-right-0,.m-left-0 !optional;}
.m-x-x2{@extend .m-right-x2,.m-left-x2 !optional;}

.m-y{@extend .m-top,.m-bottom !optional;}
.m-y-0{@extend .m-top-0,.m-bottom-0 !optional;}
.m-y-x2{@extend .m-top-x2,.m-bottom-x2 !optional;}

.p-x{@extend .p-right,.p-left !optional;}
.p-x-0{@extend .p-right-0,.p-left-0 !optional;}
.p-x-x2{@extend .p-right-x2,.p-left-x2 !optional;}

.p-y{@extend .p-top,.p-bottom !optional;}
.p-y-0{@extend .p-top-0,.p-bottom-0 !optional;}
.p-y-x2{@extend .p-top-x2,.p-bottom-x2 !optional;}

/*-----------------------------------------------------------------------------------------------------------------------------*/
// TITLES
@for $index from 0 through 6{
  h#{$index},
  .h#{$index}{color: body(title-font-color); line-height: inherit;
    &.sep-bottom{margin-bottom: 0; &:after{margin-top: 1rem;}}
    &.sep-top{margin-top: 0; &:before{margin-bottom: .4rem;}}
    &.sep-right,
    &.sep-left{@include flex-container(row,nowrap,center,center); }
  }
}

/*-----------------------------------------------------------------------------------------------------------------------------*/
// SEPARATORS
.sep{ display:inline-block; width: 100%; margin: $spacing 0 $spacing; clear: both;  height: $border-default-size; background: body(font-color);}
.sep-top:before,
.sep-bottom:after{content:""; @extend .sep}

.sep-left:before{content:""; @extend .sep; width: auto; @include flex-grow(1); margin-top: 0; margin-bottom: 0; margin-right: $spacing;}
.sep-right:after{content:""; @extend .sep; width: auto; @include flex-grow(1); margin-top: 0; margin-bottom: 0; margin-left: $spacing;}

hr{@extend .sep; border:0; }

/*-----------------------------------------------------------------------------------------------------------------------------*/
// LISTS
ul.reset{list-style: none; padding:0; margin:0;}
ul.reset>li{display: inline-block;}
ul.tags{@extend .reset;}
ul.tags>li{padding: 3px 8px 5px; background: btn(background); color: btn(font-color);display:block; float: left; margin: 2px; @extend .rad; }


/*-----------------------------------------------------------------------------------------------------------------------------*/
// BACKGROUNDS
@if $enable-bg{
  *[class*='bg-']{@extend .p-all;}
  *[class*='bg-']>*:last-child{margin-bottom:0;}
  @each $key, $value in $colors{
    .bg-#{$key}{background-color: $value; color: body(font-color); color: contrast(body(font-color), $value);}
    // *[class~="bg-#{$key}"],
    // *[class|="bg-#{$key}"]{color: body(font-color); color: contrast(body(font-color), $value);}
    @for $index from 1 through 10{
      /* OPACITY */
      .bg-#{$key}-o-#{$index}#{0}{background-color: rgba($value, $index * 0.1);}

      /* LIGHTEN - DARKEN - OPACITY */
      @if $enable-bg-extended{
        .bg-#{$key}-minus-#{$index}#{0}{ background-color : lighten($value, $index * 10);}
        .bg-#{$key}-plus-#{$index}#{0}{ background-color : darken($value, $index * 10);}
        @for $index2 from 1 through 9{
          @if $index2 != 0{
            .bg-#{$key}-minus-#{$index}#{0}-o-#{$index2}#{0}{ background : rgba(lighten($value, $index * 10), $index2 * 0.1);}
            .bg-#{$key}-plus-#{$index}#{0}-o-#{$index2}#{0}{ background : rgba(darken($value, $index * 10), $index2 * 0.1);}
          }
          @else{
            .bg-#{$key}-minus-#{$index}#{0}-o-#{$index2}{ background : rgba(lighten($value, $index * 10), $index2 * 0.1);}
            .bg-#{$key}-plus-#{$index}#{0}-o-#{$index2}{ background : rgba(darken($value, $index * 10), $index2 * 0.1);}
          }
        }
      }
    }
    // Changes applied to elements inside a bg class container

    /* separators */
    .bg-#{$key} .sep{ background: contrast(body(font-color), $value);}

    /* titles */
    @for $index from 0 through 6{
      h#{$index}.bg-#{$key},
      .h#{$index}.bg-#{$key},
      .bg-#{$key} h#{$index},
      .bg-#{$key} .h#{$index}{color: contrast(body(title-font-color),$value);}
    }

    /* links */
    .bg-#{$key} a{color: contrast(link(font-color),$value); &:hover{color:contrast(link(font-color-hover),$value);}; &:focus{color: contrast(link(font-color-focus),$value); outline: none;};}

    /* inputs */
    .bg-#{$key} %input{
      border-color: contrast(input(border-color),$value) ;
      @if(input(background) == transparent){color: contrast(input(font-color),$value); }
      &:focus,&.focus,&.active{
        border-color: contrast( input-focus(border-color),$value);
        @if(input-focus(background) == transparent){color: contrast(input-focus(font-color),$value); }
      }
      &[required]{
        &:valid{
          @if(input-valid(border-color) == $value){border-color: darken($value, 20);}
          @if(input-valid(background) == transparent){color: contrast(input-valid(font-color),$value); }
        }
        &:invalid{
          @if(input-invalid(border-color) == $value){border-color: darken($value, 20);}
          @if(input-invalid(background) == transparent){color: contrast(input-invalid(font-color),$value); }
        }
      }
    }
    .bg-#{$key} %checkbox, .bg-#{$key} %radio{
      &+label{
        &:before{
          border-color: contrast(input(border-color),$value);
        }
        &:after{
          border-color: contrast(input(font-color),$value);
          border-top-color: color(none);
          border-right-color: color(none);
        }
      }
    }
    .bg-#{$key} %radio{
      &:checked+label{
        &:after{ background-color: contrast(input(font-color),$value);}
      }
    }
    .bg-#{$key} input[type="range"]:after,
    .bg-#{$key} input[type="range"]:before {color: contrast(body(font-color),$value); }
    /* inputs placeholders */
    @if(input(background) == transparent){
      .bg-#{$key} option{color: contrast(body(font-color),color(none));}

      .bg-#{$key} input:placeholder-shown{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input::-webkit-input-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input::-moz-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input:-ms-input-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input::placeholder{color: contrast(input(placeholder-font-color),$value);}
    }
    @if(input-focus(background) == transparent){
      .bg-#{$key} input:focus:placeholder-shown,
      .bg-#{$key} input.focus:placeholder-shown,
      .bg-#{$key} input.active:placeholder-shown{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input:focus::-webkit-input-placeholder,
      .bg-#{$key} input.focus::-webkit-input-placeholder,
      .bg-#{$key} input.active::-webkit-input-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input:focus::-moz-placeholder,
      .bg-#{$key} input.focus::-moz-placeholder,
      .bg-#{$key} input.active::-moz-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input:focus:-ms-input-placeholder,
      .bg-#{$key} input.focus:-ms-input-placeholder,
      .bg-#{$key} input.active:-ms-input-placeholder{color: contrast(input(placeholder-font-color),$value);}
      .bg-#{$key} input:focus::placeholder,
      .bg-#{$key} input.focus::placeholder,
      .bg-#{$key} input.active::placeholder{color: contrast(input(placeholder-font-color),$value);}
    }
  }
}

/*-----------------------------------------------------------------------------------------------------------------------------*/
// BORDERS
@if $enable-bd{
  @each $side in $sides {
    @if $side == 'all'{
      .bd,
      .bd-#{$side}{border: $border-default-size solid $border-default-color; @extend .p-all;}
    }
    @else{
      .bd-#{$side}[class*="bd-"],
      .bd-#{$side}{border-#{$side}: $border-default-size solid $border-default-color;
        &:not([class*="p-#{$side}"]){@extend .p-#{$side};}
      }
    }
    @for $index from 0 through 10 {
      @if $side == 'all'{
        .bd-#{$index},
        .bd-#{$side}-#{$index}{border: #{$index}px solid $border-default-color; @extend .p-all;}
      }
      @else{
        .bd-#{$side}-#{$index}[class*="bd-"],
        .bd-#{$side}-#{$index}{border-#{$side}: #{$index}px solid $border-default-color;
          &:not([class*="p-#{$side}"]){@extend .p-#{$side};}
        }
      }
    }

    @each $key, $value in $colors{
      @if $side == 'all'{
        .bd-#{$key},
        .bd-#{$side}-#{$key}{border: $border-default-size solid $value; @extend .p-all;}
      }
      @else{
        .bd-#{$side}-#{$key}[class*="bd-"],
        .bd-#{$side}-#{$key} { border-#{$side}: $border-default-size solid $value;
          &:not([class*="p-#{$side}"]) {@extend .p-#{$side}; }
        }
      }
      @for $index from 0 through 10 {
        @if $side == 'all'{
          .bd-#{$key}-#{$index},
          .bd-#{$side}-#{$key}-#{$index}{border: #{$index}px solid $value; @extend .p-all;}
        }
        @else{
          .bd-#{$side}-#{$key}-#{$index}[class*="bd-"],
          .bd-#{$side}-#{$key}-#{$index}{border-#{$side}: #{$index}px solid $value;
            &:not([class*="p-#{$side}"]){@extend .p-#{$side};}
          }
        }
      }
    }
  }
}


/*-----------------------------------------------------------------------------------------------------------------------------*/
// BUTTONS
.btn {
  display: inline-block;
  text-align: center;
  max-width: 100%;
  text-overflow: ellipsis;
  overflow: hidden;
  vertical-align: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  padding: .4em 1.5em .5em;
  font-size: 1em;
  line-height: 1.5em;
  border-radius: 0;
  @if btn(radius) == true{
    border-radius: $radius;
  }
  outline: none;
  border: btn(border-size) solid btn(background);
  background-color: btn(background);
  color: btn(font-color);
  cursor: pointer;
  font-family: inherit;
  text-decoration: none;
  @extend .ft-normal;
  @include transition(all .2s ease-in-out);
  &:not([class*="m-bottom"]){margin-bottom: 6px;}
  &:focus{color: btn(font-color); text-decoration: none; outline: none; @include box-shadow(none);}
  &:hover{color: btn(font-color); text-decoration: none;}
  &>a{padding: .4em 1.5em .5em; margin: -.4em -1.5em -.5em;}
}

.btn-sm{font-size: .8em; padding: .4em 1.2em .5em;
  &>a{padding: .4em 1.2em .5em; margin: -.4em -1.2em -.5em;}
}
.btn-lg{font-size: 1.25em; }


@each $key, $value in $colors{
  .btn-bd-#{$key}{
    border-color: $value;
    @if $value != transparent{color: $value; }
    @else{color: contrast(btn(font-color),$value); }
    background-color: transparent;
    &:hover,&:active,&.active{
      background: $value;
      text-decoration: none;
      color: contrast(btn(font-color),$value);
    }
    &:focus{
      color: $value;
      &:hover,&:active,&.active{
        color: contrast(btn(font-color),$value);
      }
    }
  }
  .btn-bg-#{$key}{
    border-color: $value;
    background-color: $value;
    color: contrast(btn(font-color),$value);
    &:hover,&:focus,&:active,&.active{
      text-decoration: none;
      @if lightness($value) > 60{
        color: contrast(btn(font-color),scale-color($value,$lightness:-5));
        background-color: scale-color($value,$lightness:-15);
        border-color: scale-color($value,$lightness:-15);
      }
      @else{
        color: contrast(btn(font-color),scale-color($value,$lightness:5));
        background-color: scale-color($value,$lightness:15);
        border-color: scale-color($value,$lightness:15);
      }
    }
  }
}

input[type="submit"].btn-sm, input[type="button"].btn-sm, button.btn-sm{@extend .btn-sm;}
input[type="submit"].btn-lg, input[type="button"].btn-lg, button.btn-lg{@extend .btn-lg;}

input[type="submit"],
input[type="button"],
button:not([class*="btn-bg"]):not([class*="btn-bd"]):not([class*="toast"]),
*[class*="btn"]{@extend .btn;}

@if btn(extend) != '' {
  input[type="submit"]:not([class*="btn-bg"]):not([class*="btn-bd"]),
  input[type="button"]:not([class*="btn-bg"]):not([class*="btn-bd"]),
  button:not([class*="btn-bg"]):not([class*="btn-bd"]):not([class*="toast"]),
  *[class*="btn"]:not([class*="btn-bg"]):not([class*="btn-bd"]){@extend #{btn(extend)} !optional;}
}

/*-----------------------------------------------------------------------------------------------------------------------------*/
// FLEX
.flex{@include flex-container();}

*[class*='flex-']:not([class*="-grow"]){@extend .flex;}
*[class*='flex-'][class*='-row']{@include flex-direction(row);}
*[class*='flex-'][class*='-column']{@include flex-direction(column);}

*[class*='flex-'][class*='-wrap']{@include flex-wrap();}
*[class*='flex-'][class*='-nowrap']{@include flex-wrap(nowrap);}

@each $value in $flexvalues{
  $valueflat : str-replace($value,'-','');
  *[class*='flex-'][class*='-justifycontent--#{$valueflat}']{justify-content: $value;}
  *[class*='flex-'][class*='-alignitems--#{$valueflat}']{align-items: $value;}

  .alignself--#{$valueflat}{align-self: $value;}
}

@for $index from 0 through 10 {
  .flexgrow--#{$index},
  *[class*='flex-'][class*='-flexgrow']>*[class*="flexgrow--#{$index}"],
  *[class*='flex-'][class*='-flexgrow--#{$index}']>*{@include flex-grow($index);}
}

/*-----------------------------------------------------------------------------------------------------------------------------*/
// FORMS
%input{
  @include transition(all 0.4s);
  background-color: input(background);
  color: contrast(input(font-color),input(background));
  border: 0;
  border: input(border-size) solid input(border-color);
  @if input(radius) == true{
    border-radius: $radius;
  }
  outline: none;
  width: 100%;
  margin-bottom: $spacing;
  margin-right: $spacing;
  padding: .4em .6em .4em;
  font-size: 1em;
  line-height: 1.5em;
  &:focus,&.focus,&.active{
    background-color: input-focus(background);
    border-color: input-focus(border-color);
    color: contrast(input-focus(font-color),input-focus(background));
  }
  &[required]{
    &:valid{
      background-color: input-valid(background);
      border-color: input-valid(border-color);
      color: contrast(input-valid(font-color),input-valid(background));
    }
    &:invalid{
      background-color: input-invalid(background);
      border-color: input-invalid(border-color);
      color: contrast(input-invalid(font-color),input-invalid(background));
    }
  }
}

input.text, input[type="text"],
input.email, input[type="email"],
input.password, input[type="password"],
input.tel, input[type="tel"],
input.url, input[type="url"],
input.date, input[type="date"],
input.range, input[type="range"],
input.number, input[type="number"],
select, option,
textarea{@extend %input;}

@if(input(background) == transparent){option{color:body(font-color);} }
textarea{@include transition(background 0.4s); min-height: 150px; height: auto; max-width: 100%; resize: vertical;}
input.url, input[type="url"],
input.email, input[type="email"]{
  &:focus:valid{@extend %input[required]:valid;}
  &:invalid{@extend %input[required]:invalid;}
}
input.date, input[type="date"]{padding-right: 0;}

// input.number, input[type="number"]{width: auto;}

input.range,input[type="range"]{position: relative; padding: 0.4em 0; border: 0; cursor: pointer; }
input.range:after,
input[type="range"]:after,
input.range:before,
input[type="range"]:before{position: absolute; top: 1.2em; color: body(font-color) }
input.range:before,input[type="range"]:before{left:0em; content: attr(min); }
input.range:after,input[type="range"]:after{right: 0em; content: attr(max); }

input.nofill{opacity: 0; padding: 0 !important; margin: 0 !important; width: 0 !important; height: 0 !important; display: block; }

%checkbox, %radio{
  opacity: 0; padding: 0; margin:0; @include size(0);
  &+label{
    text-transform: none;
    padding-left: 1.4em;
    margin-right: $spacing;
    margin-bottom: $spacing;
    position: relative;
    cursor: pointer;
    white-space: nowrap;
    &:before ,&:after{
      content: "";
      display: block;
      position: absolute;
      left: 0;
      top: 0;
    }
    &:before{
      bottom: 0;
      margin: auto;
      @include size(1em);
      border: 2px solid input(border-color);
    }
    &:after{
      @include size(1.2em,0.6em);
      border: 3px solid input(font-color);
      border-top: 3px solid color(none);
      border-right: 3px solid color(none);
      @include transform(rotate(-55deg) skew(-25deg));
      @include transition(opacity 0.1s);
      opacity: 0;
    }
  }
  &:checked+label{
    &:after{opacity: 1;}
  }
}
%radio{
  &+label{
    &:before {border-radius: 100%; }
    &:after{
      border-radius: 100%;
      @include transform(none);
      @include transition(all 0.3s);
      @include size(0.5em);
      border: 0;
      background-color: input(font-color);
      top:0;
      bottom: 0;
      margin: auto 0.25em;
    }
  }
}

input.checkbox,input[type="checkbox"]{@extend %checkbox;}
input.radio,input[type="radio"]{@extend %radio;}

input:placeholder-shown{color: contrast(input(placeholder-font-color),input(background));}
input::-webkit-input-placeholder{color: contrast(input(placeholder-font-color),input(background));}
input::-moz-placeholder{color: contrast(input(placeholder-font-color),input(background));}
input:-ms-input-placeholder{color: contrast(input(placeholder-font-color),input(background));}
input::placeholder{color: contrast(input(placeholder-font-color),input(background));}

input:focus:placeholder-shown,
input.focus:placeholder-shown,
input.active:placeholder-shown{color: contrast(input(placeholder-font-color),input-focus(background));}
input:focus::-webkit-input-placeholder,
input.focus::-webkit-input-placeholder,
input.active::-webkit-input-placeholder{color: contrast(input(placeholder-font-color),input-focus(background));}
input:focus::-moz-placeholder,
input.focus::-moz-placeholder,
input.active::-moz-placeholder{color: contrast(input(placeholder-font-color),input-focus(background));}
input:focus:-ms-input-placeholder,
input.focus:-ms-input-placeholder,
input.active:-ms-input-placeholder{color: contrast(input(placeholder-font-color),input-focus(background));}
input:focus::placeholder,
input.focus::placeholder,
input.active::placeholder{color: contrast(input(placeholder-font-color),input-focus(background));}

.form-group{position: relative; margin-bottom: 0; }
.form-group label{text-transform: uppercase; text-align: left;
  &[for]:not([for=""]){ cursor: pointer;}
}
.form-group label:first-child+%radio,
.form-group label:first-child+%checkbox{display: block; }
.form-group:last-child>*:last-child{margin-bottom: 0;}